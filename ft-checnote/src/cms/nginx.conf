
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen 4175;
        server_name  localhost;
        location / {
            root D:\Deploy\device-note\frontend\dist;
            index index.html index.htm;
            # add_header Access-Control-Allow-Origin *;
            # add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
            # add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
            # add_header Access-Control-Expose-Headers Content-Length,Content-Range;

            # 使用Nginx解决跨域访问的完整实例 https://blog.csdn.net/tombosky/article/details/135504779
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
        }

        location /api/ {
            proxy_pass http://10.8.54.24:7090/;
            rewrite ^/api/(.*)$ /$1 break;
        }
    }

    server {
        listen 4177;
        server_name  localhost;
        location / {
            root D:\Deploy\device-note\frontend\dist-checknote;
            index index.html index.htm;
            # add_header Access-Control-Allow-Origin *;
            # add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
            # add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
            # add_header Access-Control-Expose-Headers Content-Length,Content-Range;

            # 使用Nginx解决跨域访问的完整实例 https://blog.csdn.net/tombosky/article/details/135504779
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
        }

        location ~* ^/pages/(dq|yb|sb|ai_entry|safe_product|wz|smds/watchdog|smlj/cggy|smlj/sbrhjy)/ {
            root  D:\Deploy\device-note\frontend\dist-checknote;
            index index.html index.htm;

            # 使用Nginx解决跨域访问的完整实例 https://blog.csdn.net/tombosky/article/details/135504779
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
        }

        location /sse/ {
            proxy_pass http://10.8.54.24:7090/;
            rewrite ^/api/(.*)$ /$1 break;
        }

        location /api/ {
            # 单纯jar配置
            proxy_pass http://10.8.54.24:7090/;

            # war的tomcat配置
            # proxy_pass http://localhost:8100/your-war-name/
            rewrite ^/api/(.*)$ /$1 break;
        }
    }

    server {
        listen 5179;
        server_name  localhost;
        location / {
            root D:\Deploy\ai\frontend\dist-0.0.1-cors;
            index index.html index.htm;
            # add_header Access-Control-Allow-Origin *;
            # add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
            # add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
            # add_header Access-Control-Expose-Headers Content-Length,Content-Range;

            # 使用Nginx解决跨域访问的完整实例 https://blog.csdn.net/tombosky/article/details/135504779
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';
        }
    }

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
}
